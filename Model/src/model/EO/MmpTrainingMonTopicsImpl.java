package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 06 17:18:12 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmpTrainingMonTopicsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        MmpTrainingMonTopicsId,
        MmpTrainingMonInspId,
        TopicsId,
        Status,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TrainerId,
        TopicCovered,
        MmpTrainingMonInsp,
        TblTopics;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int MMPTRAININGMONTOPICSID = AttributesEnum.MmpTrainingMonTopicsId.index();
    public static final int MMPTRAININGMONINSPID = AttributesEnum.MmpTrainingMonInspId.index();
    public static final int TOPICSID = AttributesEnum.TopicsId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TRAINERID = AttributesEnum.TrainerId.index();
    public static final int TOPICCOVERED = AttributesEnum.TopicCovered.index();
    public static final int MMPTRAININGMONINSP = AttributesEnum.MmpTrainingMonInsp.index();
    public static final int TBLTOPICS = AttributesEnum.TblTopics.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmpTrainingMonTopicsImpl() {
    }

    /**
     * Gets the attribute value for MmpTrainingMonTopicsId, using the alias name MmpTrainingMonTopicsId.
     * @return the value of MmpTrainingMonTopicsId
     */
    public BigDecimal getMmpTrainingMonTopicsId() {
        return (BigDecimal) getAttributeInternal(MMPTRAININGMONTOPICSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MmpTrainingMonTopicsId.
     * @param value value to set the MmpTrainingMonTopicsId
     */
    public void setMmpTrainingMonTopicsId(BigDecimal value) {
        setAttributeInternal(MMPTRAININGMONTOPICSID, value);
    }

    /**
     * Gets the attribute value for MmpTrainingMonInspId, using the alias name MmpTrainingMonInspId.
     * @return the value of MmpTrainingMonInspId
     */
    public BigDecimal getMmpTrainingMonInspId() {
        return (BigDecimal) getAttributeInternal(MMPTRAININGMONINSPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MmpTrainingMonInspId.
     * @param value value to set the MmpTrainingMonInspId
     */
    public void setMmpTrainingMonInspId(BigDecimal value) {
        setAttributeInternal(MMPTRAININGMONINSPID, value);
    }

    /**
     * Gets the attribute value for TopicsId, using the alias name TopicsId.
     * @return the value of TopicsId
     */
    public BigDecimal getTopicsId() {
        return (BigDecimal) getAttributeInternal(TOPICSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TopicsId.
     * @param value value to set the TopicsId
     */
    public void setTopicsId(BigDecimal value) {
        setAttributeInternal(TOPICSID, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for TrainerId, using the alias name TrainerId.
     * @return the value of TrainerId
     */
    public BigDecimal getTrainerId() {
        return (BigDecimal) getAttributeInternal(TRAINERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrainerId.
     * @param value value to set the TrainerId
     */
    public void setTrainerId(BigDecimal value) {
        setAttributeInternal(TRAINERID, value);
    }

    /**
     * Gets the attribute value for TopicCovered, using the alias name TopicCovered.
     * @return the value of TopicCovered
     */
    public String getTopicCovered() {
        return (String) getAttributeInternal(TOPICCOVERED);
    }

    /**
     * Sets <code>value</code> as the attribute value for TopicCovered.
     * @param value value to set the TopicCovered
     */
    public void setTopicCovered(String value) {
        setAttributeInternal(TOPICCOVERED, value);
    }

    /**
     * @return the associated entity MmpTrainingMonInspImpl.
     */
    public MmpTrainingMonInspImpl getMmpTrainingMonInsp() {
        return (MmpTrainingMonInspImpl) getAttributeInternal(MMPTRAININGMONINSP);
    }

    /**
     * Sets <code>value</code> as the associated entity MmpTrainingMonInspImpl.
     */
    public void setMmpTrainingMonInsp(MmpTrainingMonInspImpl value) {
        setAttributeInternal(MMPTRAININGMONINSP, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getTblTopics() {
        return (EntityImpl) getAttributeInternal(TBLTOPICS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTblTopics(EntityImpl value) {
        setAttributeInternal(TBLTOPICS, value);
    }

    /**
     * @param mmpTrainingMonTopicsId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal mmpTrainingMonTopicsId) {
        return new Key(new Object[] { mmpTrainingMonTopicsId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.MmpTrainingMonTopics");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
           try {
               loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
           } catch(Exception ex) {
               ex.printStackTrace();
           }
           
           if (operation == DML_INSERT) {
               setCreatedBy(loginId);
               setUpdatedBy(loginId);
               } else if(operation == DML_UPDATE) {
               setUpdatedBy(loginId);
           }
        super.doDML(operation, e);
    }
}

